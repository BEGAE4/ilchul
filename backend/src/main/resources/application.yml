spring:
  application:
    name: backend
    version: v1
  config:
    import: optional:file:.env[.properties]

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 100MB

  # MySQL
  #  datasource:
  #    driver-class-name: ${MYSQL_DRIVER}
  #    url: jdbc:mysql://${MYSQL_URL}/${MYSQL_DATABASE}?serverTimezone=Asia/Seoul
  #    username: ${MYSQL_USER}
  #    password: ${MYSQL_PASSWORD}
  #    hikari:
  #      maximum-pool-size: 10

  # H2 데이터베이스 설정
  datasource:
    url: jdbc:h2:mem:testdb  # 메모리 DB (재시작시 데이터 삭제)
    # url: jdbc:h2:file:./data/testdb  # 파일 DB (데이터 유지)
    driver-class-name: org.h2.Driver
    username: sa
    password:

  # JPA
  jpa:
    hibernate:
      ddl-auto: create
    defer-datasource-initialization: true

  # Redis
  data:
    redis:
      host: localhost
      port: 6379

  security:
    oauth2:
      client:
        registration:
          google:
            client-name: Google
            client-id: ${OAUTH_GOOGLE_CLIENT_ID}
            client-secret: ${OAUTH_GOOGLE_CLIENT_SECRET}
            redirect-uri: ${OAUTH_GOOGLE_REDIRECT_URI}
            authorization-grant-type: authorization_code
            scope:
              - profile
              - email
          kakao:
            client-name: Kakao
            client-id: ${KAKAO_REST_API_KEY}
            client-secret: ${OAUTH_KAKAO_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            redirect-uri: ${OAUTH_KAKAO_REDIRECT_URI}
            authorization-grant-type: authorization_code
            scope:
              - profile_nickname
              - profile_image
              - account_email
          naver:
            client-name: Naver
            client-id: ${OAUTH_NAVER_CLIENT_ID}
            client-secret: ${OAUTH_NAVER_CLIENT_SECRET}
            redirect-uri: ${OAUTH_NAVER_REDIRECT_URI}
            authorization-grant-type: authorization_code
            scope:
              - nickname
              - profile_image
              - age
              - gender
              - email
              - mobile
              - name
              - birthday
              - birthyear
        provider:
          # Spring Boot 2.0부터 CommonOAuth2Provider가 추가되어 구글, 깃허브, 페이스북, 옥타는 기본 설정값을 스프링이 제공
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

  jwt:
    secret: ${JWT_SECRET_KEY}
    access-token-validity-in-seconds: 1800 # 30분
    refresh-token-validity-in-seconds: 86400 # 1일


# Logging
logging:
  level:
    org.springframework.cache: trace

server:
  port: 8080